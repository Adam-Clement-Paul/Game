/*
        // Get All Users
        if (pathname === "/api/users" && method === "GET") {
            return new Response(JSON.stringify(users), {
                status: 200,
                headers: {
                    "Content-Type": "application/json",
                    "Access-control-allow-origin": "*",
                },
            });
        }

        if (pathname.startsWith("/api/users/") && method === "GET") {
            const userId = pathname.split("/")[3]; // Extract user ID from the URL
            const user = users.find((user) => user.id === userId);
            if (user) {
                return new Response(JSON.stringify(user), {
                    status: 200,
                    headers: {
                        "Content-Type": "application/json",
                        "Access-control-allow-origin": "*",
                    },
                });
            } else {
                return new Response("User not found", {
                    status: 404,
                    headers: {
                        "Content-Type": "text/plain",
                        "Access-control-allow-origin": "*",
                    },
                });
            }
        }

        // Create User
        if (pathname === "/api/users" && method === "POST") {
            const body = await request.json();
            const newJson = users.concat(body);
            // @ts-ignore
            write("./users.json", JSON.stringify(newJson), null, 2);
            return new Response(JSON.stringify(newJson), {
                status: 200,
                headers: {
                    "Content-Type": "application/json",
                    "Access-control-allow-origin": "*",
                },
            });
        }
        // Delete User
        // method == 0 is a DELETE request
        // @ts-ignore
        if (pathname === "/api/users" && method == 0) {
            const body = await request.json();
            const newJson = users.filter((user) => user.id !== body.id);
            // @ts-ignore
            write("./users.json", JSON.stringify(newJson), null, 2);
            return new Response(JSON.stringify(newJson), {
                status: 200,
                headers: {
                    "Content-Type": "application/json",
                    "Access-control-allow-origin": "*",
                },
            });
        }

        // Update User
        if (pathname === "/api/users" && method === "PUT") {
            const body = await request.json();
            const newJson = users.map((user) => {
                if (user.id === body.id) {
                    return body;
                }
                return user;
            });
            // @ts-ignore
            write("./users.json", JSON.stringify(newJson), null, 2);
            return new Response(JSON.stringify(newJson), {
                status: 200,
                headers: {
                    "Content-Type": "application/json",
                    "Access-control-allow-origin": "*",
                },
            });
        }
        */
